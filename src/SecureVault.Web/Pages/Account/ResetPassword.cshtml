@page
@model SecureVault.Web.Pages.Account.ResetPasswordModel
@{
    ViewData["Title"] = "Reset Password";
    Layout = "_LoginLayout";
}

<div class="container">
    <div class="row justify-content-center mt-5">
        <div class="col-md-6">
            <div class="card shadow">
                <div class="card-body">
                    <h2 class="card-title text-center mb-4">Reset Your Password</h2>
                    
                    @if (Model.IsTokenValid)
                    {
                        @if (!string.IsNullOrEmpty(Model.ErrorMessage))
                        {
                            <div class="alert alert-danger" role="alert">
                                @Model.ErrorMessage
                            </div>
                        }
                        
                        <form method="post" class="needs-validation" novalidate>
                            <input type="hidden" asp-for="Token" />
                            
                            <div class="form-group mb-3">
                                <label asp-for="NewPassword" class="form-label">New Password</label>
                                <input asp-for="NewPassword" type="password" class="form-control" required 
                                       minlength="8" />
                                <span asp-validation-for="NewPassword" class="text-danger"></span>
                                <div class="form-text">
                                    Password must be at least 8 characters long and contain:
                                    <ul class="mb-0">
                                        <li>At least one uppercase letter</li>
                                        <li>At least one lowercase letter</li>
                                        <li>At least one number</li>
                                        <li>At least one special character</li>
                                    </ul>
                                </div>
                            </div>
                            
                            <div class="form-group mb-4">
                                <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                                <input asp-for="ConfirmPassword" type="password" class="form-control" required />
                                <span asp-validation-for="ConfirmPassword" class="text-danger"></span>
                            </div>
                            
                            <div class="d-grid gap-2">
                                <button type="submit" class="btn btn-primary">Reset Password</button>
                            </div>
                        </form>
                    }
                    else
                    {
                        <div class="alert alert-danger" role="alert">
                            <h4 class="alert-heading">Invalid or Expired Link</h4>
                            <p>The password reset link you used is invalid or has expired.</p>
                            <hr>
                            <p class="mb-0">
                                Please request a new password reset link 
                                <a asp-page="./ForgotPassword" class="alert-link">here</a>.
                            </p>
                        </div>
                    }
                    
                    <hr class="my-4">
                    
                    <div class="text-center">
                        <a asp-page="./Login" class="text-decoration-none">
                            Back to login
                        </a>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        // Enable Bootstrap form validation
        (function () {
            'use strict'
            var forms = document.querySelectorAll('.needs-validation')
            Array.prototype.slice.call(forms)
                .forEach(function (form) {
                    form.addEventListener('submit', function (event) {
                        if (!form.checkValidity()) {
                            event.preventDefault()
                            event.stopPropagation()
                        }
                        form.classList.add('was-validated')
                    }, false)
                })
        })()

        // Auto-focus the password input
        document.addEventListener('DOMContentLoaded', function() {
            var passwordInput = document.getElementById('NewPassword');
            if (passwordInput) {
                passwordInput.focus();
            }
        });

        // Real-time password validation
        document.getElementById('NewPassword').addEventListener('input', function(e) {
            var password = e.target.value;
            var hasUpperCase = /[A-Z]/.test(password);
            var hasLowerCase = /[a-z]/.test(password);
            var hasNumbers = /\d/.test(password);
            var hasSpecialChar = /[!@#$%^&*(),.?":{}|<>]/.test(password);
            var isLongEnough = password.length >= 8;

            // You can add visual indicators here
        });

        // Confirm password validation
        document.getElementById('ConfirmPassword').addEventListener('input', function(e) {
            var password = document.getElementById('NewPassword').value;
            var confirmPassword = e.target.value;
            
            if (password !== confirmPassword) {
                e.target.setCustomValidity("Passwords don't match");
            } else {
                e.target.setCustomValidity('');
            }
        });
    </script>
}
